{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "InstanceType": {
      "Description": "Kafka EC2 instance type",
      "Type": "String",
      "Default": "i3.4xlarge",
      "AllowedValues": [
        "t1.micro",
        "t2.nano",
        "t2.micro",
        "t2.small",
        "t2.medium",
        "t2.large",
        "m1.small",
        "m1.medium",
        "m1.large",
        "m1.xlarge",
        "m2.xlarge",
        "m2.2xlarge",
        "m2.4xlarge",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "m4.large",
        "m4.xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.10xlarge",
        "c1.medium",
        "c1.xlarge",
        "c3.large",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "c4.large",
        "c4.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "g2.2xlarge",
        "g2.8xlarge",
        "r3.large",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "d2.xlarge",
        "d2.2xlarge",
        "d2.4xlarge",
        "d2.8xlarge",
        "hi1.4xlarge",
        "hs1.8xlarge",
        "cr1.8xlarge",
        "cc2.8xlarge",
        "cg1.4xlarge",
        "i3.4xlarge"
      ],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },
    "ClientInstanceType": {
      "Description": "Kafka client EC2 instance type",
      "Type": "String",
      "Default": "c4.8xlarge",
      "AllowedValues": [
        "t1.micro",
        "t2.nano",
        "t2.micro",
        "t2.small",
        "t2.medium",
        "t2.large",
        "m1.small",
        "m1.medium",
        "m1.large",
        "m1.xlarge",
        "m2.xlarge",
        "m2.2xlarge",
        "m2.4xlarge",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "m4.large",
        "m4.xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.10xlarge",
        "c1.medium",
        "c1.xlarge",
        "c3.large",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "c4.large",
        "c4.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "g2.2xlarge",
        "g2.8xlarge",
        "r3.large",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "d2.xlarge",
        "d2.2xlarge",
        "d2.4xlarge",
        "d2.8xlarge",
        "hi1.4xlarge",
        "hs1.8xlarge",
        "cr1.8xlarge",
        "cc2.8xlarge",
        "cg1.4xlarge",
        "i3.4xlarge"
      ],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },
    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    }
  },
  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t1.micro"    : { "Arch" : "HVM64"  },
      "t2.nano"     : { "Arch" : "HVM64"  },
      "t2.micro"    : { "Arch" : "HVM64"  },
      "t2.small"    : { "Arch" : "HVM64"  },
      "t2.medium"   : { "Arch" : "HVM64"  },
      "t2.large"    : { "Arch" : "HVM64"  },
      "m1.small"    : { "Arch" : "HVM64"  },
      "m1.medium"   : { "Arch" : "HVM64"  },
      "m1.large"    : { "Arch" : "HVM64"  },
      "m1.xlarge"   : { "Arch" : "HVM64"  },
      "m2.xlarge"   : { "Arch" : "HVM64"  },
      "m2.2xlarge"  : { "Arch" : "HVM64"  },
      "m2.4xlarge"  : { "Arch" : "HVM64"  },
      "m3.medium"   : { "Arch" : "HVM64"  },
      "m3.large"    : { "Arch" : "HVM64"  },
      "m3.xlarge"   : { "Arch" : "HVM64"  },
      "m3.2xlarge"  : { "Arch" : "HVM64"  },
      "m4.large"    : { "Arch" : "HVM64"  },
      "m4.xlarge"   : { "Arch" : "HVM64"  },
      "m4.2xlarge"  : { "Arch" : "HVM64"  },
      "m4.4xlarge"  : { "Arch" : "HVM64"  },
      "m4.10xlarge" : { "Arch" : "HVM64"  },
      "c1.medium"   : { "Arch" : "HVM64"  },
      "c1.xlarge"   : { "Arch" : "HVM64"  },
      "c3.large"    : { "Arch" : "HVM64"  },
      "c3.xlarge"   : { "Arch" : "HVM64"  },
      "c3.2xlarge"  : { "Arch" : "HVM64"  },
      "c3.4xlarge"  : { "Arch" : "HVM64"  },
      "c3.8xlarge"  : { "Arch" : "HVM64"  },
      "c4.large"    : { "Arch" : "HVM64"  },
      "c4.xlarge"   : { "Arch" : "HVM64"  },
      "c4.2xlarge"  : { "Arch" : "HVM64"  },
      "c4.4xlarge"  : { "Arch" : "HVM64"  },
      "c4.8xlarge"  : { "Arch" : "HVM64"  },
      "g2.2xlarge"  : { "Arch" : "HVMG2"  },
      "g2.8xlarge"  : { "Arch" : "HVMG2"  },
      "r3.large"    : { "Arch" : "HVM64"  },
      "r3.xlarge"   : { "Arch" : "HVM64"  },
      "r3.2xlarge"  : { "Arch" : "HVM64"  },
      "r3.4xlarge"  : { "Arch" : "HVM64"  },
      "r3.8xlarge"  : { "Arch" : "HVM64"  },
      "i2.xlarge"   : { "Arch" : "HVM64"  },
      "i2.2xlarge"  : { "Arch" : "HVM64"  },
      "i2.4xlarge"  : { "Arch" : "HVM64"  },
      "i2.8xlarge"  : { "Arch" : "HVM64"  },
      "d2.xlarge"   : { "Arch" : "HVM64"  },
      "d2.2xlarge"  : { "Arch" : "HVM64"  },
      "d2.4xlarge"  : { "Arch" : "HVM64"  },
      "d2.8xlarge"  : { "Arch" : "HVM64"  },
      "hi1.4xlarge" : { "Arch" : "HVM64"  },
      "hs1.8xlarge" : { "Arch" : "HVM64"  },
      "cr1.8xlarge" : { "Arch" : "HVM64"  },
      "cc2.8xlarge" : { "Arch" : "HVM64"  },
      "i3.4xlarge" : {"Arch" : "HVM64"}
    },

    "AWSInstanceType2NATArch" : {
      "t1.micro"    : { "Arch" : "NATHVM64"  },
      "t2.nano"     : { "Arch" : "NATHVM64"  },
      "t2.micro"    : { "Arch" : "NATHVM64"  },
      "t2.small"    : { "Arch" : "NATHVM64"  },
      "t2.medium"   : { "Arch" : "NATHVM64"  },
      "t2.large"    : { "Arch" : "NATHVM64"  },
      "m1.small"    : { "Arch" : "NATHVM64"  },
      "m1.medium"   : { "Arch" : "NATHVM64"  },
      "m1.large"    : { "Arch" : "NATHVM64"  },
      "m1.xlarge"   : { "Arch" : "NATHVM64"  },
      "m2.xlarge"   : { "Arch" : "NATHVM64"  },
      "m2.2xlarge"  : { "Arch" : "NATHVM64"  },
      "m2.4xlarge"  : { "Arch" : "NATHVM64"  },
      "m3.medium"   : { "Arch" : "NATHVM64"  },
      "m3.large"    : { "Arch" : "NATHVM64"  },
      "m3.xlarge"   : { "Arch" : "NATHVM64"  },
      "m3.2xlarge"  : { "Arch" : "NATHVM64"  },
      "m4.large"    : { "Arch" : "NATHVM64"  },
      "m4.xlarge"   : { "Arch" : "NATHVM64"  },
      "m4.2xlarge"  : { "Arch" : "NATHVM64"  },
      "m4.4xlarge"  : { "Arch" : "NATHVM64"  },
      "m4.10xlarge" : { "Arch" : "NATHVM64"  },
      "c1.medium"   : { "Arch" : "NATHVM64"  },
      "c1.xlarge"   : { "Arch" : "NATHVM64"  },
      "c3.large"    : { "Arch" : "NATHVM64"  },
      "c3.xlarge"   : { "Arch" : "NATHVM64"  },
      "c3.2xlarge"  : { "Arch" : "NATHVM64"  },
      "c3.4xlarge"  : { "Arch" : "NATHVM64"  },
      "c3.8xlarge"  : { "Arch" : "NATHVM64"  },
      "c4.large"    : { "Arch" : "NATHVM64"  },
      "c4.xlarge"   : { "Arch" : "NATHVM64"  },
      "c4.2xlarge"  : { "Arch" : "NATHVM64"  },
      "c4.4xlarge"  : { "Arch" : "NATHVM64"  },
      "c4.8xlarge"  : { "Arch" : "NATHVM64"  },
      "g2.2xlarge"  : { "Arch" : "NATHVMG2"  },
      "g2.8xlarge"  : { "Arch" : "NATHVMG2"  },
      "r3.large"    : { "Arch" : "NATHVM64"  },
      "r3.xlarge"   : { "Arch" : "NATHVM64"  },
      "r3.2xlarge"  : { "Arch" : "NATHVM64"  },
      "r3.4xlarge"  : { "Arch" : "NATHVM64"  },
      "r3.8xlarge"  : { "Arch" : "NATHVM64"  },
      "i2.xlarge"   : { "Arch" : "NATHVM64"  },
      "i2.2xlarge"  : { "Arch" : "NATHVM64"  },
      "i2.4xlarge"  : { "Arch" : "NATHVM64"  },
      "i2.8xlarge"  : { "Arch" : "NATHVM64"  },
      "d2.xlarge"   : { "Arch" : "NATHVM64"  },
      "d2.2xlarge"  : { "Arch" : "NATHVM64"  },
      "d2.4xlarge"  : { "Arch" : "NATHVM64"  },
      "d2.8xlarge"  : { "Arch" : "NATHVM64"  },
      "hi1.4xlarge" : { "Arch" : "NATHVM64"  },
      "hs1.8xlarge" : { "Arch" : "NATHVM64"  },
      "cr1.8xlarge" : { "Arch" : "NATHVM64"  },
      "cc2.8xlarge" : { "Arch" : "NATHVM64"  }
    }
,
    "AWSRegionArch2AMI" : {
      "us-east-1"        : {"HVM64" : "ami-00bf61217e296b409", "HVMG2" : "ami-0aeb704d503081ea6"},
      "us-west-2"        : {"HVM64" : "ami-01e24be29428c15b2", "HVMG2" : "ami-0fe84a5b4563d8f27"},
      "us-west-1"        : {"HVM64" : "ami-0ec6517f6edbf8044", "HVMG2" : "ami-0a7fc72dc0e51aa77"},
      "eu-west-1"        : {"HVM64" : "ami-08935252a36e25f85", "HVMG2" : "ami-0d5299b1c6112c3c7"},
      "eu-west-2"        : {"HVM64" : "ami-01419b804382064e4", "HVMG2" : "NOT_SUPPORTED"},
      "eu-west-3"        : {"HVM64" : "ami-0dd7e7ed60da8fb83", "HVMG2" : "NOT_SUPPORTED"},
      "eu-central-1"     : {"HVM64" : "ami-0cfbf4f6db41068ac", "HVMG2" : "ami-0aa1822e3eb913a11"},
      "eu-north-1"       : {"HVM64" : "ami-86fe70f8", "HVMG2" : "ami-32d55b4c"},
      "ap-northeast-1"   : {"HVM64" : "ami-00a5245b4816c38e6", "HVMG2" : "ami-09d0e0e099ecabba2"},
      "ap-northeast-2"   : {"HVM64" : "ami-00dc207f8ba6dc919", "HVMG2" : "NOT_SUPPORTED"},
      "ap-northeast-3"   : {"HVM64" : "ami-0b65f69a5c11f3522", "HVMG2" : "NOT_SUPPORTED"},
      "ap-southeast-1"   : {"HVM64" : "ami-05b3bcf7f311194b3", "HVMG2" : "ami-0e46ce0d6a87dc979"},
      "ap-southeast-2"   : {"HVM64" : "ami-02fd0b06f06d93dfc", "HVMG2" : "ami-0c0ab057a101d8ff2"},
      "ap-south-1"       : {"HVM64" : "ami-0ad42f4f66f6c1cc9", "HVMG2" : "ami-0244c1d42815af84a"},
      "us-east-2"        : {"HVM64" : "ami-00bf61217e296b409", "HVMG2" : "NOT_SUPPORTED"},
      "ca-central-1"     : {"HVM64" : "ami-07423fb63ea0a0930", "HVMG2" : "NOT_SUPPORTED"},
      "sa-east-1"        : {"HVM64" : "ami-05145e0b28ad8e0b2", "HVMG2" : "NOT_SUPPORTED"},
      "cn-north-1"       : {"HVM64" : "ami-053617c9d818c1189", "HVMG2" : "NOT_SUPPORTED"},
      "cn-northwest-1"   : {"HVM64" : "ami-0f7937761741dc640", "HVMG2" : "NOT_SUPPORTED"}
    }

  },
  "Resources": {
    "EC2R2FLSF": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "ExternalRouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      },
      "DependsOn": [
        "AttachGateway"
      ]
    },
    "Subnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "GENIVPC"
        },
        "CidrBlock": "192.158.1.0/24",
	"AvailabilityZone" : {
	    "Fn::Select" : [ "0", { "Fn::GetAZs" : "" } ]
	}
      }
    },
    "Subnet3": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "GENIVPC"
        },
        "CidrBlock": "192.158.3.0/24",
	"AvailabilityZone" : {
	    "Fn::Select" : [ "0", { "Fn::GetAZs" : "" } ]
	}
      }
    },
    "ExternalRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "GENIVPC"
        }
      }
    },
    "SubnetRouteTableAssociation": {
	"Type": "AWS::EC2::SubnetRouteTableAssociation",
	"Properties": {
	    "SubnetId": {"Ref": "Subnet3" },
	    "RouteTableId": { "Ref": "ExternalRouteTable"}
	}
    },
    "GENIVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "192.158.0.0/16"
      }
    },
    "Node2": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": {
          "Fn::FindInMap": [
            "AWSRegionArch2AMI",
            {
              "Ref": "AWS::Region"
            },
            {
              "Fn::FindInMap": [
                "AWSInstanceType2Arch",
                {
                  "Ref": "InstanceType"
                },
                "Arch"
              ]
            }
          ]
        },
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "KeyName": {
          "Ref": "KeyName"
        },
        "Tags"        : [ {"Key" : "Name", "Value" : {"Fn::Join" : ["",[{ "Ref" : "AWS::StackName" },"Node2"]]}}],
        "NetworkInterfaces": [
          {
            "NetworkInterfaceId": {
              "Ref": "Interface13"
            },
	    "DeviceIndex": "1"
          },
          {
            "NetworkInterfaceId": {
              "Ref": "PublicInterface3"
            },
	    "DeviceIndex": "0"
          }
        ],
        "IamInstanceProfile": {
	  "Ref": "RunCmdInstanceProfile"
        },
	"UserData": { "Fn::Base64" : { "Fn::Join" : ["", [
             "#!/bin/bash -xe\n",
         "yum install -y java-1.8.0-openjdk;yum install -y java-1.8.0-openjdk-devel;",
         "yum install -y python-devel gcc python-pip; pip install psutil; pip install Kafka-python;",
         "echo '192.168.1.11    zoo1' >> /etc/hosts;",
         "echo '192.158.1.12    zoo2' >> /etc/hosts;",
         "echo '192.158.1.13    zoo3' >> /etc/hosts;",
         "echo '192.168.1.10    Node0' >> /etc/hosts;",
         "echo '192.168.1.11    Node1' >> /etc/hosts;",
         "echo '192.158.1.12    Node2' >> /etc/hosts;",
         "echo '192.158.1.13    Node3' >> /etc/hosts;"
        ]]}}
      }
    },
    "Node3": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": {
          "Fn::FindInMap": [
            "AWSRegionArch2AMI",
            {
              "Ref": "AWS::Region"
            },
            {
              "Fn::FindInMap": [
                "AWSInstanceType2Arch",
                {
                  "Ref": "InstanceType"
                },
                "Arch"
              ]
            }
          ]
        },
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "KeyName": {
          "Ref": "KeyName"
        },
        "Tags"        : [ {"Key" : "Name", "Value" : {"Fn::Join" : ["",[{ "Ref" : "AWS::StackName" },"Node3"]]}}],
        "NetworkInterfaces": [
          {
            "NetworkInterfaceId": {
              "Ref": "Interface14"
            },
	    "DeviceIndex": "1"
          },
          {
            "NetworkInterfaceId": {
              "Ref": "PublicInterface4"
            },
	    "DeviceIndex": "0"
          }
        ],
        "IamInstanceProfile": {
	  "Ref": "RunCmdInstanceProfile"
        },
	"UserData": { "Fn::Base64" : { "Fn::Join" : ["", [
             "#!/bin/bash -xe\n",
         "yum install -y java-1.8.0-openjdk;yum install -y java-1.8.0-openjdk-devel;",
         "yum install -y python-devel gcc python-pip; pip install psutil; pip install Kafka-python;",
         "echo '192.168.1.11    zoo1' >> /etc/hosts;",
         "echo '192.158.1.12    zoo2' >> /etc/hosts;",
         "echo '192.158.1.13    zoo3' >> /etc/hosts;",
         "echo '192.168.1.10    Node0' >> /etc/hosts;",
         "echo '192.168.1.11    Node1' >> /etc/hosts;",
         "echo '192.158.1.12    Node2' >> /etc/hosts;",
         "echo '192.158.1.13    Node3' >> /etc/hosts;"
        ]]}}
      }
    },
    "Interface13": {
      "Type": "AWS::EC2::NetworkInterface",
      "Properties": {
        "SubnetId": {
          "Ref": "Subnet1"
        },
        "PrivateIpAddress":"192.158.1.12",
	"GroupSet": [ { "Ref": "SSHSecurityGroup" }]
      }
    },
    "Interface14": {
      "Type": "AWS::EC2::NetworkInterface",
      "Properties": {
        "SubnetId": {
          "Ref": "Subnet1"
        },
        "PrivateIpAddress":"192.158.1.13",
	"GroupSet": [ { "Ref": "SSHSecurityGroup" }]
      }
    },
    "PublicInterface3": {
      "Type": "AWS::EC2::NetworkInterface",
      "Properties": {
        "SubnetId": {
          "Ref": "Subnet3"
        },
	"GroupSet": [ { "Ref": "SSHSecurityGroup" }]
      }
    },
    "PublicInterface4": {
      "Type": "AWS::EC2::NetworkInterface",
      "Properties": {
        "SubnetId": {
          "Ref": "Subnet3"
        },
	"GroupSet": [ { "Ref": "SSHSecurityGroup" }]
      }
    },
    "AttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        },
        "VpcId": {
          "Ref": "GENIVPC"
        }
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {}
    },
    "ExternalIP3": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      },
      "DependsOn": [
        "AttachGateway"
      ]
    },
    "ExternalIP4": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      },
      "DependsOn": [
        "AttachGateway"
      ]
    },
    "IPAssociation3": {
      "Type": "AWS::EC2::EIPAssociation",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "ExternalIP3",
            "AllocationId"
          ]
        },
        "NetworkInterfaceId": {
          "Ref": "PublicInterface3"
        }
      }
    },
    "IPAssociation4": {
      "Type": "AWS::EC2::EIPAssociation",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "ExternalIP4",
            "AllocationId"
          ]
        },
        "NetworkInterfaceId": {
          "Ref": "PublicInterface4"
        }
      }
    },
    "SSHSecurityGroup": {
	"Type": "AWS::EC2::SecurityGroup",
	"Properties": {
	    "VpcId": {
		"Ref": "GENIVPC"
	    },
	    "GroupDescription": "SSH and ICMP Access from the world",
	    "SecurityGroupIngress": [
		{ "IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "CidrIp": "0.0.0.0/0" },
		{ "IpProtocol": "tcp", "FromPort": "0", "ToPort": "65535", "CidrIp": "192.158.1.0/24" },
		{ "IpProtocol": "tcp", "FromPort": "0", "ToPort": "65535", "CidrIp": "192.168.1.0/24" },
		{ "IpProtocol": "icmp", "FromPort": "8", "ToPort": "-1", "CidrIp": "0.0.0.0/0" }
	    ]
	}
    },
    "RunCmdInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [ { "Ref": "RunCmdRole" } ]
      }
    },
    "RunCmdRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
	"AssumeRolePolicyDocument": {
	    "Version": "2012-10-17",
	    "Statement": [
		{
		    "Sid": "",
		    "Effect": "Allow",
		    "Principal": {
			"Service": "ec2.amazonaws.com"
		    },
		    "Action": "sts:AssumeRole"
		}
	    ]
        },
	"Path": "/"
      }
    },
    "RunCmdPolicies": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "runcmd",
	"Roles": [ { "Ref": "RunCmdRole" } ],
        "PolicyDocument": {
	    "Version": "2012-10-17",
	    "Statement": [
		{
		    "Effect": "Allow",
		    "Action": [
			"ssm:DescribeAssociation",
			"ssm:GetDeployablePatchSnapshotForInstance",
			"ssm:GetDocument",
			"ssm:GetParameters",
			"ssm:ListAssociations",
			"ssm:ListInstanceAssociations",
			"ssm:PutInventory",
			"ssm:UpdateAssociationStatus",
			"ssm:UpdateInstanceAssociationStatus",
			"ssm:UpdateInstanceInformation"
		    ],
		    "Resource": "*"
		},
		{
		    "Effect": "Allow",
		    "Action": [
			"ec2messages:AcknowledgeMessage",
			"ec2messages:DeleteMessage",
			"ec2messages:FailMessage",
			"ec2messages:GetEndpoint",
			"ec2messages:GetMessages",
			"ec2messages:SendReply"
		    ],
		    "Resource": "*"
		},
		{
		    "Effect": "Allow",
		    "Action": [
			"cloudwatch:PutMetricData"
		    ],
		    "Resource": "*"
		},
		{
		    "Effect": "Allow",
		    "Action": [
			"ec2:DescribeInstanceStatus"
		    ],
		    "Resource": "*"
		},
		{
		    "Effect": "Allow",
		    "Action": [
			"ds:CreateComputer",
			"ds:DescribeDirectories"
		    ],
		    "Resource": "*"
		},
		{
		    "Effect": "Allow",
		    "Action": [
			"logs:CreateLogGroup",
			"logs:CreateLogStream",
			"logs:DescribeLogGroups",
			"logs:DescribeLogStreams",
			"logs:PutLogEvents"
		    ],
		    "Resource": "*"
		},
		{
		    "Effect": "Allow",
		    "Action": [
			"s3:PutObject",
			"s3:GetObject",
			"s3:AbortMultipartUpload",
			"s3:ListMultipartUploadParts",
			"s3:ListBucketMultipartUploads"
		    ],
		    "Resource": "*"
		},
		{
		    "Effect": "Allow",
		    "Action": [
			"s3:ListBucket"
		    ],
		    "Resource": "arn:aws:s3:::amazon-ssm-packages-*"
		}
	    ]
	}
      }
    }
  },
  "Outputs": {
  }
}
